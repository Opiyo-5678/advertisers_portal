# Generated by Django 5.2.7 on 2025-10-18 11:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdPlacement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placement_name', models.CharField(max_length=100)),
                ('placement_code', models.CharField(max_length=50, unique=True)),
                ('base_price_per_day', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('dimensions', models.CharField(blank=True, max_length=50, null=True)),
                ('max_file_size_mb', models.IntegerField(default=5)),
                ('is_active', models.BooleanField(default=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('max_concurrent_ads', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ad_placements',
                'ordering': ['placement_name'],
            },
        ),
        migrations.CreateModel(
            name='PricingPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_name', models.CharField(max_length=100)),
                ('package_type', models.CharField(choices=[('basic', 'Basic'), ('premium', 'Premium'), ('enterprise', 'Enterprise')], max_length=20)),
                ('price_monthly', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_quarterly', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_yearly', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_active_ads', models.IntegerField(default=5)),
                ('max_file_uploads', models.IntegerField(default=20)),
                ('analytics_access', models.BooleanField(default=False)),
                ('priority_support', models.BooleanField(default=False)),
                ('featured_placement', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('display_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'pricing_packages',
                'ordering': ['display_order', 'price_monthly'],
            },
        ),
        migrations.CreateModel(
            name='Ad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('short_description', models.CharField(blank=True, max_length=250, null=True)),
                ('full_description', models.TextField(blank=True, null=True)),
                ('call_to_action', models.CharField(blank=True, max_length=100, null=True)),
                ('terms_conditions', models.TextField(blank=True, null=True)),
                ('website_url', models.URLField(blank=True, max_length=500, null=True)),
                ('catalog_url', models.URLField(blank=True, max_length=500, null=True)),
                ('whatsapp_link', models.CharField(blank=True, max_length=255, null=True)),
                ('qr_code_url', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_review', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('live', 'Live'), ('expired', 'Expired'), ('paused', 'Paused')], default='draft', max_length=20)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('total_impressions', models.IntegerField(default=0)),
                ('total_clicks', models.IntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False)),
                ('priority_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_ads', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ads',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Analytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('impression', 'Impression'), ('click', 'Click')], max_length=20)),
                ('ip_address', models.CharField(blank=True, max_length=45, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('device_type', models.CharField(blank=True, max_length=50, null=True)),
                ('browser', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('referrer_url', models.CharField(blank=True, max_length=500, null=True)),
                ('event_timestamp', models.DateTimeField(auto_now_add=True)),
                ('ad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='advertisers.ad')),
            ],
            options={
                'db_table': 'analytics',
                'ordering': ['-event_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=100)),
                ('entity_type', models.CharField(blank=True, max_length=50, null=True)),
                ('entity_id', models.IntegerField(blank=True, null=True)),
                ('old_values', models.JSONField(blank=True, null=True)),
                ('new_values', models.JSONField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=45, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'audit_log',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('total_days', models.IntegerField()),
                ('price_per_day', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('final_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('cancellation_reason', models.TextField(blank=True, null=True)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('start_notification_sent', models.BooleanField(default=False)),
                ('end_notification_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='advertisers.ad')),
                ('placement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='advertisers.adplacement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'bookings',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='open', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_messages', to=settings.AUTH_USER_MODEL)),
                ('related_ad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='advertisers.ad')),
                ('related_booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='advertisers.booking')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MessageReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reply_text', models.TextField()),
                ('is_admin_reply', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='advertisers.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'message_replies',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(blank=True, max_length=50, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('sent_via_email', models.BooleanField(default=False)),
                ('sent_via_sms', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('related_ad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='advertisers.ad')),
                ('related_booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='advertisers.booking')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_filename', models.CharField(max_length=255)),
                ('stored_filename', models.CharField(max_length=255)),
                ('file_path', models.CharField(max_length=500)),
                ('file_type', models.CharField(max_length=50)),
                ('file_size_kb', models.IntegerField()),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('thumbnail_path', models.CharField(blank=True, max_length=500, null=True)),
                ('virus_scan_status', models.CharField(choices=[('pending', 'Pending'), ('clean', 'Clean'), ('infected', 'Infected'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('virus_scan_date', models.DateTimeField(blank=True, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('alt_text', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='files', to='advertisers.ad')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_files', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'uploaded_files',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='ad',
            index=models.Index(fields=['status'], name='ads_status_6b4e9f_idx'),
        ),
        migrations.AddIndex(
            model_name='ad',
            index=models.Index(fields=['start_date', 'end_date'], name='ads_start_d_3d9a90_idx'),
        ),
        migrations.AddIndex(
            model_name='analytics',
            index=models.Index(fields=['ad', 'event_type'], name='analytics_ad_id_23b595_idx'),
        ),
        migrations.AddIndex(
            model_name='analytics',
            index=models.Index(fields=['event_timestamp'], name='analytics_event_t_8c248c_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['action'], name='audit_log_action_b32d4d_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['entity_type', 'entity_id'], name='audit_log_entity__c2633a_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['start_date', 'end_date'], name='bookings_start_d_527bc3_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['status'], name='bookings_status_51373b_idx'),
        ),
    ]
